import logging
import os
import random
import time
from random import choice

# import PyNaCl
import aiohttp
import psycopg2
import pymorphy2
from bs4 import BeautifulSoup
from deep_translator import GoogleTranslator
from discord_buttons_plugin import *
from discord_components import ButtonStyle
from discord_components import ComponentsBot, Button, Select, SelectOption
from dislash import SelectOption

import discord
from bulls_and_cows import bulls_and_cows
from config import settings
from discord import FFmpegPCMAudio
from yandex_music import ClientAsync, Client

client = ClientAsync()
client.init()
client = Client(settings['token_ya'])
logging.basicConfig(level=logging.INFO)
morph = pymorphy2.MorphAnalyzer()

try:
    import os

    os.system('pip install SpeechRecognition')
    # os.system('python3 -m pip install -U discord.py[voice]')
    # os.system("pip install pynacl")

except:
    print('–æ—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ')

song = 'song.mp3'

a = False
# path = 'main/Songs'

program_path = os.getcwd()  # –ø—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞, –≥–¥–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
path = os.path.join(program_path, 'Songs')
DW_SONG = []
DONATE = []
DONATE1 = []
DONATE_SERVER = []
PLAY = True
DEVELOPERS = ['0891', '0603']

cycles = dict(game=True)
numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
bot = ComponentsBot("!")
buttons = ButtonsClient(bot)
bot.remove_command('help')
queues = {}
music_id = []
bot_queue = []
news2 = ''

xod = True
a, b, c = 0, 0, 0
start = True
n, x = 0, 0
m = 'Q W E R T Y U I O P A S D F G H J K L Z X C V B N M q w e r t y u i o p a s d f g h j k l z x c v b n m'.split(' ')
m.sort()

con = None
try:
    con = psycopg2.connect(settings['DATABASE_URL'])
    cur2 = con.cursor()
    cur = con.cursor()
    cur2.execute('select * from donat')
    cur.execute('select * from donat_server')

    # display the PostgreSQL database server version
    result = cur2.fetchall()
    result2 = cur.fetchall()
    for i in result:
        DONATE.append(i)

    # for i in result2:
    #     DONATE_SERVER.append(i)
    con.commit()
    cur2.close()
    cur.close()
except Exception as error:
    print('Cause: {}'.format(error))

finally:
    if con is not None:
        con.close()
        print('Database connection closed.')


####################################################
# –¢–£–¢ –ì–û–õ–û–°–û–í–û–ï –£–ü–†–ê–í–õ–ï–ù–ò–ï:
# @bot.command()
# async def join(ctx: commands.Context):
#     """Joins a voice channel"""
#     voice(ctx)
#####################################################


def check_queue(ctx, id):
    if queues[id] != {}:
        voice = ctx.guild.voice_client
        print(queues)
        source = queues[id].pop(0)
        bot_queue.pop(0)
        voice.play(source, after=lambda x=0: check_queue(ctx, ctx.message.guild.id))


def tr(c):
    a = {'–ê': 'A', '–ë': 'B', '–í': 'V', '–ì': 'G', '–î': 'D', '–ï': 'E', '–Å': 'E', '–ñ': 'Zh',
         '–ó': 'Z', '–ò': 'I', '–ô': 'Y', '–ö': 'K', '–õ': 'L', '–ú': 'M', '–ù': 'N', '–û': 'O',
         '–ü': 'P', '–†': 'R', '–°': 'S', '–¢': 'T', '–£': 'U', '–§': 'F', '–•': 'Kh', '–¶': 'Tc',
         '–ß': 'Ch', '–®': 'Sh', '–©': 'Shch', '–´': 'Y', '–≠': 'E', '–Æ': 'Iu', '–Ø': 'Ya',
         ' ': '_', '–¨': '', '–™': ''}
    b = []
    for i in c:
        if i not in a and i.upper() in a:
            b.append(a[i.upper()].lower())
        elif i in a:
            b.append(a[i])
        else:
            b.append(i)
    return ''.join(b)


@bot.event
async def on_ready():
    await bot.change_presence(status=discord.Status.online,
                              activity=discord.Activity(type=discord.ActivityType.listening, name='!help'))
    # DiscordComponents(bot)


@bot.command()
async def play(ctx, *arg):
    def convert_tuple(c_tuple):
        str = ' '.join(c_tuple)
        return str

    if ctx.guild.voice_client in bot.voice_clients and ctx.voice_client.is_playing():
        await ctx.send(f'{ctx.message.author.mention}, –ø–æ—Å—Ç–∞–≤–∏–ª –≤ –æ—á–µ—Ä–µ–¥—å!')

        name = convert_tuple(arg)
        print(name)
        search_result = client.search(name)
        music_id.append(f'{search_result.best.result.id}:{search_result.best.result.albums[0].id}')
        song1 = f'{str(len(music_id))}.mp3'

        try:
            print(f'{search_result.best.result.id}:{search_result.best.result.albums[0].id}')
            client.tracks([music_id[-1]])[0].download(f'{path}/{song1}')
        except Exception as e:
            # await ctx.send(traceback.format_exc())
            pass

        if len(music_id) == 11:
            music_id.clear()

        voice = ctx.guild.voice_client
        source = FFmpegPCMAudio(f'{path}/{song1}')
        guild_id = ctx.message.guild.id

        bot_queue.append(f'‚Ä¢{search_result.best.result.title} - {search_result.best.result.artists[0].name}')

        guild_id = ctx.message.guild.id
        if guild_id in queues:
            queues[guild_id].append(source)
        else:
            queues[guild_id] = [source]

        embed = discord.Embed(title=f'{search_result.best.result.title} - {search_result.best.result.artists[0].name}',
                              color=0x8c00ff)
        embed.set_author(name=f'{search_result.best.result.artists[0].name}',
                         icon_url=f'https://{search_result.best.result.artists[0]["cover"].uri.replace("%%", "600x600")}')
        embed.add_field(name='–ê–ª—å–±–æ–º:', value=f'{search_result.best.result.albums[0].title}', inline=False)
        embed.add_field(name='–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞:', value=f'{search_result.best.result.albums[0].year}', inline=False)

        if search_result.best.result.cover_uri == None:
            embed.set_image(url=f'https://music.yandex.ru/blocks/meta/i/og-image.png')
        else:
            embed.set_image(url=f'https://{search_result.best.result.cover_uri.replace("%%", "600x600")}')

        embed.set_footer(text="–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ‚Äô –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö!")

        await buttons.send(
            embed=embed,
            channel=ctx.channel.id,
            components=[
                ActionRow([
                    Button(
                        label="–ü–∞—É–∑–∞ ‚è∏Ô∏è",
                        style=ButtonType().Primary,
                        custom_id="pause_button"
                    ),
                    # Refer to line 13
                    Button(
                        label="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚úÖ",
                        style=ButtonType().Success,
                        custom_id="resume_button"  # Refer to line 17

                    ), Button(
                        label="–°—Ç–æ–ø üî∂",
                        style=ButtonType().Danger,
                        custom_id="stop_button"  # Refer to line 21
                    )
                ])
            ]
        )

    # elif ctx.guild.voice_client in bot.voice_clients and not ctx.voice_client.is_playing():

    else:
        name = convert_tuple(arg)
        print(name)
        search_result = client.search(name)
        try:
            print(f'{search_result.best.result.id}:{search_result.best.result.albums[0].id}')
            client.tracks([f'{search_result.best.result.id}:{search_result.best.result.albums[0].id}'])[0].download(
                os.path.join(f'{path}/{song}'))
        except Exception as e:
            pass
            # await ctx.send(traceback.format_exc())
        print('—Å–∫–∞—á–∞–ª —Ç—Ä–µ–∫')

        if ctx.author.voice:
            channel = ctx.message.author.voice.channel
            # try:

            if not ctx.guild.voice_client in bot.voice_clients:
                voice = await channel.connect()
                print(voice)
                print('–ø—Ä–∏—à—ë–ª –≤ –≥—Å')
            else:
                voice = ctx.voice_client
            source = FFmpegPCMAudio(os.path.join(f'{path}/{song}'))
            voice.play(source, after=lambda x=0: check_queue(ctx, ctx.message.guild.id))
            print('–Ω–∞—á–∞–ª –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç—å –ø–µ—Å–Ω—é')
            # except:
            #     print('–æ—à–∏–±–∫–∞ –≤ 123 —Å—Ç—Ä–æ–∫–µ')
        else:
            await ctx.send("–ó–∞–π–¥–∏—Ç–µ –≤ –ª—é–±–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!")
        # player = voice.play(source, after=lambda x=None: check_queue(ctx, ctx.message.guild.id)) # or "path/to/your.mp3"

        embed = discord.Embed(title=f'{search_result.best.result.title} - {search_result.best.result.artists[0].name}',
                              color=0x8c00ff)
        embed.set_author(name=f'{search_result.best.result.artists[0].name}',
                         icon_url=f'https://{search_result.best.result.artists[0]["cover"].uri.replace("%%", "600x600")}')
        embed.add_field(name='–ê–ª—å–±–æ–º:', value=f'{search_result.best.result.albums[0].title}', inline=False)
        embed.add_field(name='–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞:', value=f'{search_result.best.result.albums[0].year}', inline=False)
        # print(f'{search_result.best.result.cover_uri}, {search_result.best.result}')

        if search_result.best.result.cover_uri == None:
            embed.set_image(url=f'https://music.yandex.ru/blocks/meta/i/og-image.png')
        else:
            embed.set_image(url=f'https://{search_result.best.result.cover_uri.replace("%%", "600x600")}')

        embed.set_footer(text="–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ‚Äô –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö!")
        # await ctx.send(embed=embed)

        await buttons.send(
            embed=embed,
            channel=ctx.channel.id,
            components=[
                ActionRow([
                    Button(
                        label="–ü–∞—É–∑–∞ ‚è∏Ô∏è",
                        style=ButtonType().Primary,
                        custom_id="pause_button"
                    ),
                    # Refer to line 13
                    Button(
                        label="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚úÖ",
                        style=ButtonType().Success,
                        custom_id="resume_button"  # Refer to line 17

                    ), Button(
                        label="–°—Ç–æ–ø üî∂",
                        style=ButtonType().Danger,
                        custom_id="stop_button"  # Refer to line 21
                    )
                ])
            ]
        )


@bot.command()
async def chart(ctx):
    chart = client.chart('world').chart

    text = [f'üèÜ {chart.title}', chart.description, '', '–¢—Ä–µ–∫–∏:']

    for track_short in chart.tracks:
        track, chart = track_short.track, track_short.chart
        artists = ''
        if track.artists:
            artists = ' - ' + ', '.join(artist.name for artist in track.artists)

        track_text = f'{track.title}{artists}'

        if chart.progress == 'down':
            track_text = 'üîª ' + track_text
        elif chart.progress == 'up':
            track_text = 'üî∫' + track_text
        elif chart.progress == 'new':
            track_text = 'üÜï ' + track_text
        elif chart.position == 1:
            track_text = 'üëë ' + track_text

        track_text = f'{chart.position} {track_text}'
        text.append(track_text)

    embed = discord.Embed(title='–¢—Ä–µ–∫–∏, –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–ú—É–∑—ã–∫–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å:',
                          color=0x8c00ff)
    embed.set_author(name=f'üèÜ –ß–∞—Ä—Ç –Ø–Ω–¥–µ–∫—Å.–ú—É–∑—ã–∫–∏',
                     icon_url=f'https://music.yandex.ru/blocks/meta/i/og-image.png')
    embed.add_field(name='\u200b', value="\n".join(text[4:14]), inline=False)
    # embed.set_footer(text="–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ‚Äô –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö!")

    await ctx.send(embed=embed)
    # print('kj')


@bot.command()
async def play_chart(ctx):
    await ctx.send(f'{ctx.message.author.mention}, –ø–æ—Å—Ç–∞–≤–∏–ª –≤ –æ—á–µ—Ä–µ–¥—å!')
    chart = client.chart('world').chart

    for track_short in chart.tracks[:10]:
        track, chart = track_short.track, track_short.chart
        artists = ''
        if track.artists:
            artists = ' - ' + ', '.join(artist.name for artist in track.artists)

        track_text = f'{track.title}{artists}'

        print(f'{track_text} {track.cover_uri} {track.track_id} {track.artists[0].name} {track.artists[0].cover.uri}')

        if ctx.author.voice:
            channel = ctx.message.author.voice.channel
            # try:

            if not ctx.guild.voice_client in bot.voice_clients:
                voice = await channel.connect()
                print('–ø—Ä–∏—à—ë–ª –≤ –≥—Å')

                search_result = client.search(track_text)
                try:

                    client.tracks([f'{search_result.best.result.id}:{search_result.best.result.albums[0].id}'])[
                        0].download(
                        os.path.join(f'{path}/{song}'))
                except Exception as e:
                    pass
                    # await ctx.send(traceback.format_exc())
                print('—Å–∫–∞—á–∞–ª —Ç—Ä–µ–∫')

                # voice = ctx.voice_client
                source = FFmpegPCMAudio(f'{path}/{song}')
                voice.play(source, after=lambda x=0: check_queue(ctx, ctx.message.guild.id))
                print('–Ω–∞—á–∞–ª –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç—å –ø–µ—Å–Ω—é')

            else:
                if ctx.voice_client.is_playing():
                    music_id.append(f'{track.track_id}')
                    song1 = f'{str(len(music_id))}.mp3'
                    source = FFmpegPCMAudio(f'{path}/{song1}')

                    try:
                        print(f'{track_text}')
                        client.tracks([music_id[-1]])[0].download(f'{path}/{song1}')
                    except Exception as e:
                        pass
                        # await ctx.send(traceback.format_exc())

                    if len(music_id) == 11:
                        music_id.clear()

                    bot_queue.append(f'‚Ä¢{track_text}')

                    guild_id = ctx.message.guild.id
                    if guild_id in queues:
                        queues[guild_id].append(source)
                    else:
                        queues[guild_id] = [source]

                else:
                    search_result = client.search(track_text)
                    try:

                        client.tracks([f'{search_result.best.result.id}:{search_result.best.result.albums[0].id}'])[
                            0].download(
                            os.path.join(f'{path}/{song}'))
                    except Exception as e:
                        pass
                        # await ctx.send(traceback.format_exc())
                    print('—Å–∫–∞—á–∞–ª —Ç—Ä–µ–∫')

                    voice = ctx.voice_client
                    source = FFmpegPCMAudio(f'{path}/{song}')
                    voice.play(source, after=lambda x=0: check_queue(ctx, ctx.message.guild.id))
                    print('–Ω–∞—á–∞–ª –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç—å –ø–µ—Å–Ω—é')

            # except:
            #     print('–æ—à–∏–±–∫–∞ –≤ 123 —Å—Ç—Ä–æ–∫–µ')
        else:
            await ctx.send("–ó–∞–π–¥–∏—Ç–µ –≤ –ª—é–±–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É!")

        # voice.play(source, after=lambda x=0: check_queue(ctx, ctx.message.guild.id))
        search_result = client.search(track_text)

        embed = discord.Embed(title=f'{search_result.best.result.title} - {search_result.best.result.artists[0].name}',
                              color=0x8c00ff)
        embed.set_author(name=f'{search_result.best.result.artists[0].name}',
                         icon_url=f'https://{search_result.best.result.artists[0]["cover"].uri.replace("%%", "600x600")}')
        embed.add_field(name='–ê–ª—å–±–æ–º:', value=f'{search_result.best.result.albums[0].title}', inline=False)
        embed.add_field(name='–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞:', value=f'{search_result.best.result.albums[0].year}', inline=False)
        # print(f'{search_result.best.result.cover_uri}, {search_result.best.result}')

        if search_result.best.result.cover_uri == None:
            embed.set_image(url=f'https://music.yandex.ru/blocks/meta/i/og-image.png')
        else:
            embed.set_image(url=f'https://{search_result.best.result.cover_uri.replace("%%", "600x600")}')

        embed.set_footer(text="–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ‚Äô –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö!")
        # await ctx.send(embed=embed)

        await buttons.send(
            embed=embed,
            channel=ctx.channel.id,
            components=[
                ActionRow([
                    Button(
                        label="–ü–∞—É–∑–∞ ‚è∏Ô∏è",
                        style=ButtonType().Primary,
                        custom_id="pause_button"
                    ),
                    # Refer to line 13
                    Button(
                        label="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚úÖ",
                        style=ButtonType().Success,
                        custom_id="resume_button"  # Refer to line 17

                    ), Button(
                        label="–ü—Ä–æ–ø—É—Å–∫ üî∂",
                        style=ButtonType().Danger,
                        custom_id="skip_button"  # Refer to line 21
                    )
                ])
            ]
        )


@bot.command()
async def dw(ctx, *arg):
    author = ctx.message.author
    con = None
    DONATE.clear()
    count = 0
    try:
        con = psycopg2.connect(settings['DATABASE_URL'])
        cur2 = con.cursor()
        cur2.execute('select * from donat')
        cur = con.cursor()
        cur.execute('select * from donat_server')

        result2 = cur.fetchall()
        result = cur2.fetchall()

        for i in result:
            DONATE.append(i)

        for i in result2:
            DONATE.append(i)
        con.commit()
        cur2.close()
    except Exception as error:
        print('Cause: {}'.format(error))

    finally:
        if con is not None:
            con.close()
            print('Database connection closed.')

    for i in DONATE:
        if author.discriminator in i[0] or str(ctx.guild.id) in i[0]:
            seconds = time.time()
            if int(i[1]) + 2678400 > int(seconds):
                def convert_tuple(c_tuple):
                    str = ' '.join(c_tuple)
                    return str

                name = convert_tuple(arg)
                print(name)
                search_result = client.search(name)
                dw_song = f'{search_result.best.result.title}-{search_result.best.result.artists[0].name}.mp3'
                DW_SONG.append(f'{search_result.best.result.title}-{search_result.best.result.artists[0].name}.mp3')
                await ctx.send(f'–°–∫–∞—á–∏–≤–∞—é...')
                try:
                    print(f'{search_result.best.result.id}:{search_result.best.result.albums[0].id}')
                    client.tracks([f'{search_result.best.result.id}:{search_result.best.result.albums[0].id}'])[
                        0].download(
                        os.path.join(f'{path}/{dw_song}'))
                except Exception as e:
                    pass
                    # await ctx.send(traceback.format_exc())

                embed = discord.Embed(
                    title=f'{search_result.best.result.title} - {search_result.best.result.artists[0].name}',
                    color=0x8c00ff)
                embed.set_author(name=f'{search_result.best.result.artists[0].name}',
                                 icon_url=f'https://{search_result.best.result.artists[0]["cover"].uri.replace("%%", "600x600")}')
                embed.add_field(name='–ê–ª—å–±–æ–º:', value=f'{search_result.best.result.albums[0].title}', inline=False)
                embed.add_field(name='–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞:', value=f'{search_result.best.result.albums[0].year}', inline=False)

                if search_result.best.result.cover_uri == None:
                    embed.set_image(url=f'https://music.yandex.ru/blocks/meta/i/og-image.png')
                else:
                    embed.set_image(url=f'https://{search_result.best.result.cover_uri.replace("%%", "600x600")}')

                embed.set_footer(text="–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ‚Äô –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö!")

                await ctx.send(f'{author.mention}, –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º –≤ –õ–°')
                await author.send(embed=embed)
                await author.send(file=discord.File(f'{path}/{"".join(DW_SONG)}'))

                os.remove(f'{path}/{"".join(DW_SONG)}')
                DW_SONG.clear()

            else:
                con = None
                try:
                    con = psycopg2.connect(settings['DATABASE_URL'])
                    cur2 = con.cursor()
                    cur2.execute(f"""delete from donat where discriminator = '{author.discriminator}'""")
                    con.commit()
                    cur2.close()
                except Exception as error:
                    print('Cause: {}'.format(error))

                finally:
                    if con is not None:
                        con.close()
                        print('Database connection closed.')

                await ctx.send(
                    f'{author.mention}, –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ —É–∂–µ –∏—Å—Ç—ë–∫ üò¢, –Ω–∞–ø–∏—à–∏—Ç–µ `!pro`, —á—Ç–æ–±—ã –ø—Ä–æ–¥–ª–∏—Ç—å –µ—ë.')
        elif author.discriminator not in i[0]:
            count += 1

    if count >= len(DONATE):
        await ctx.send(f'{author.mention}, –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è **üëëSalmon-pro**.')


@buttons.click
async def pause_button(ctx):
    voice = discord.utils.get(bot.voice_clients, guild=ctx.guild)
    if voice.is_playing():
        voice.pause()
        await ctx.reply("–ü–æ—Å—Ç–∞–≤–∏–ª –Ω–∞ –ø–∞—É–∑—É!")
    else:
        await ctx.send('–ù–µ—á–µ–≥–æ —Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –ø–∞—É–∑—É')


@buttons.click
async def resume_button(ctx):
    voice = discord.utils.get(bot.voice_clients, guild=ctx.guild)
    if voice.is_paused():
        voice.resume()
        await ctx.reply("–í–æ–∑–æ–±–Ω–æ–≤–∏–ª –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ!")
    else:
        await ctx.reply('–ù–µ—Ç –ø–µ—Å–Ω–∏ –Ω–∞ –ø–∞—É–∑–µ')


@buttons.click
async def stop_button(ctx):
    await ctx.reply("–ú—É–∑—ã–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
    voice = discord.utils.get(bot.voice_clients, guild=ctx.guild)
    voice.stop()
    # await ctx.voice_client.disconnect()


@buttons.click
async def skip_button(ctx):
    await ctx.reply("–ü–µ—Å–Ω—è –ø—Ä–æ–ø—É—â–µ–Ω–∞!")
    voice = discord.utils.get(bot.voice_clients, guild=ctx.guild)
    voice.stop()


@bot.command()
async def queue(ctx):
    if len(bot_queue) == 0:
        await ctx.send('–í –æ—á–µ—Ä–µ–¥–∏ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç')
    embed = discord.Embed(title='ü•Å –û—á–µ—Ä–µ–¥—å –º—É–∑—ã–∫–∏:',
                          color=0xf37944)
    embed.add_field(name='\u200b', value='\n'.join(bot_queue), inline=False)
    # embed.set_footer(text="–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ‚Äô –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö!")

    await ctx.send(embed=embed)


@bot.command()
async def pause(ctx):
    voice = discord.utils.get(bot.voice_clients, guild=ctx.guild)
    if voice.is_playing():
        voice.pause()
    else:
        await ctx.reply('–ù–µ—á–µ–≥–æ —Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –ø–∞—É–∑—É')


@bot.command()
async def resume(ctx):
    voice = discord.utils.get(bot.voice_clients, guild=ctx.guild)
    if voice.is_paused():
        voice.resume()
    else:
        await ctx.send('–ù–µ—Ç –ø–µ—Å–Ω–∏ –Ω–∞ –ø–∞—É–∑–µ')


@bot.command()
async def stop(ctx):
    await ctx.reply("–ú—É–∑—ã–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
    voice = discord.utils.get(bot.voice_clients, guild=ctx.guild)
    voice.stop()
    await ctx.voice_client.disconnect()
    # await ctx.send('–ù–µ—Ç –ø–µ—Å–Ω–∏ –Ω–∞ –ø–∞—É–∑–µ')


@bot.command()
async def stop_game(ctx):
    cycles["game"] = False


@bot.command()
async def meme(ctx):
    embed = discord.Embed(title="", colour=0xfff70a)

    async with aiohttp.ClientSession() as cs:
        async with cs.get('https://www.reddit.com/r/dankmemes/new.json?sort=hot') as r:
            res = await r.json()
            embed.set_image(url=res['data']['children'][random.randint(0, 25)]['data']['url'])
            await ctx.send(embed=embed)


@bot.command()
async def info(ctx, member: discord.Member = None):
    embed = discord.Embed(color=0xff781f)
    embed.set_author(name=f'{member}', icon_url=f'{member.avatar_url}')
    print(f'{member.avatar_url}')
    embed.add_field(name='üìÜ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:', value=f'{member.created_at}', inline=False)
    embed.add_field(name='üí• –í—ã—Å—à–∞—è —Ä–æ–ª—å:', value=f'{member.top_role.mention}', inline=False)
    embed.set_image(url=f'{member.avatar_url}')

    await ctx.send(embed=embed)

    await ctx.channel.send('\u200b')


@bot.command()
async def bc(ctx):
    embed = discord.Embed(title='‚ùó–ü—Ä–∞–≤–∏–ª–∞‚ùó', color=0x4fde02)

    embed.add_field(name='üêÑ –ë—ã–∫–∏ –∏ –∫–æ—Ä–æ–≤—ã üêÇ',
                    value='üî∞ –ë–æ—Ç –∑–∞–≥–∞–¥—ã–≤–∞–µ—Ç —á–∏—Å–ª–æ, —Å–æ—Å—Ç–æ—è—â–∏–µ –∏–∑ —á–µ—Ç—ã—Ä—ë—Ö —Ä–∞–∑–Ω—ã—Ö —Ü–∏—Ñ—Ä. –ó–∞–¥–∞—á–∞ —É–≥–∞–¥–∞—Ç—å –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ. '
                          '–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –±–æ—Ç—É —á–µ—Ç—ã—Ä—ë—Ö–∑–Ω–∞—á–Ω—ã–µ —á–∏—Å–ª–∞. –†–µ–∑—É–ª—å—Ç–∞—Ç –∫–∞–∂–¥–æ–≥–æ —Ö–æ–¥–∞ –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç—Å—è —á–∏—Å–ª–æ–º **–ë–´–ö–û–í** '
                          '–∏ **–ö–û–†–û–í**. –ï—Å–ª–∏ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Ü–∏—Ñ—Ä–∞ –∏ –µ—ë –ø–æ–∑–∏—Ü–∏—è, —Ç–æ —ç—Ç–æ **–ë–´–ö**. –ï—Å–ª–∏ —Ü–∏—Ñ—Ä–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç, '
                          '–Ω–æ –µ—ë –ø–æ–∑–∏—Ü–∏—è –Ω–µ—Ç, —Ç–æ —ç—Ç–æ **–ö–û–†–û–í–ê**.',
                    inline=False)
    embed.add_field(name='\u200b',
                    value='**‚ôª–ò–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å, –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —á–∏—Å–ª–∞!‚ôª**',
                    inline=False)
    embed.set_image(
        url='https://lh3.googleusercontent.com/6oHWaM1Z9NELHkkO7VKjwrzkAlG-rTyHGhWJcCnxWHhfJhubkinI_PfnkKS-7bC3t_k=h500')
    await ctx.send(embed=embed)
    number = random.sample(range(1, 10), 4)
    print(number)

    while True:
        message = await bot.wait_for('message', check=bc)
        if message.content == '!stop game':
            await ctx.send(f'‚ùå{message.author.mention}, –∏–≥—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!‚ùå')
            return
        else:
            count = 0
            id = message.author.id
            if message.author.discriminator != '7918':
                if len(message.content) == 4:
                    for i in message.content:
                        if i in numbers:
                            count += 1
                    if count == 4:
                        if len(bulls_and_cows(int(message.content), number)) > 25:
                            embed = discord.Embed(title='üêÑ –ë—ã–∫–∏ –∏ –∫–æ—Ä–æ–≤—ã üêÇ', color=0xf25a07)
                            embed.add_field(name='\u200b',
                                            value='üò•' + f'<@!{id}>' + f'**, {bulls_and_cows(int(message.content), number)}**',
                                            inline=False)
                            embed.set_footer(text='–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ!')
                            await message.channel.send(embed=embed)
                        else:
                            embed = discord.Embed(title='üêÑ –ë—ã–∫–∏ –∏ –∫–æ—Ä–æ–≤—ã üêÇ', color=0x4fde02)
                            embed.add_field(name='\u200b',
                                            value='üéâ' + f'<@!{id}>' + f'**, {bulls_and_cows(int(message.content), number)}**',
                                            inline=False)
                            count += 1
                            await message.channel.send(embed=embed)
                            # await ctx.send('stoped')
                            return


@bot.command()
async def help(ctx):
    embed = discord.Embed(color=0x08e7f7)

    embed.set_author(name='üìí –°–ø—Ä–∞–≤–∫a')

    embed.add_field(name='\u200b', value='**üéß–ú—É–∑—ã–∫–∞**', inline=False)
    embed.add_field(name='`!play (–Ω–∞–∑–≤–∞–Ω–∏–µ –º—É–∑—ã–∫–∏)`', value='–ü—Ä–æ–∏–≥—Ä–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—É—é –º—É–∑—ã–∫—É', inline=True)
    embed.add_field(name='`!chart`', value='–ü–æ–∫–∞–∂–µ—Ç —Ç–æ–ø-10 –ø–µ—Å–µ–Ω –∏–∑ —á–∞—Ä—Ç–∞ –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–∏', inline=True)
    embed.add_field(name='\u200b', value='\u200b', inline=False)
    embed.add_field(name='üëë`!dw (–Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏)`', value='–°–∫–∞—á–∞–µ—Ç –∞–±—Å–æ–ª—é—Ç–Ω–æ –ª—é–±—É—é –º—É–∑—ã–∫—É', inline=True)
    embed.add_field(name='`!play_chart`', value='–ü—Ä–æ–∏–≥—Ä–∞–µ—Ç –ø–µ—Å–Ω–∏ –∏–∑ —á–∞—Ä—Ç–∞   –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–∏ ', inline=True)
    embed.add_field(name='\u200b', value='\u200b', inline=False)
    embed.add_field(name='`!queue`', value='–í—ã–≤–µ–¥–µ—Ç –æ—á–µ—Ä–µ–¥—å –º—É–∑—ã–∫–∏', inline=True)

    embed.add_field(name='\u200b', value='**üçø–§–∏–ª—å–º—ã**', inline=False)
    embed.add_field(name='`!film (—Ñ–∏–ª—å–º)`', value='–ü–æ–∫–∞–∂–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∏–ª—å–º–µ, –∞ —Ç–∞–∫–∂–µ —Å–∫–∏–Ω–µ—Ç\
     —Å—Å—ã–ª–∫—É –Ω–∞ –µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä –Ω–∞ –ö–∏–Ω–æ–ø–æ–∏—Å–∫–µ', inline=True)

    embed.add_field(name='\u200b', value='**üé≤–ú–∏–Ω–∏-–∏–≥—Ä—ãüé≤**', inline=False)
    embed.add_field(name='`!bc`', value='–ü–æ–∏–≥—Ä–∞–µ—Ç —Å –≤–∞–º–∏ –≤ "–ë—ã–∫–∏ –∏ –∫–æ—Ä–æ–≤—ã" - –∏–≥—Ä—É, –≤ \
    —Ö–æ–¥–µ –∫–æ—Ç–æ—Ä–æ–π –≤—ã –¥–æ–ª–∂–µ–Ω—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫–æ–µ —á–∏—Å–ª–æ —è –∑–∞–¥—É–º–∞–ª.', inline=True)
    embed.add_field(name='`!logo`', value='–ü–æ–∏–≥—Ä–∞–µ—Ç –≤ "—É–≥–∞–¥–∞–π–∫—É" –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ –ª–æ–≥–æ—Ç–∏–ø—É', inline=True)
    embed.add_field(name='\u200b', value='\u200b', inline=False)
    embed.add_field(name='`!stop game`', value='–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–≥—Ä', inline=True)
    embed.add_field(name='`!nim`', value='–°—ã–≥—Ä–∞–µ—Ç –≤ –ù–∏–º - –∏–≥—Ä—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫—É—á–µ–∫ —Å –∫–∞–º–Ω—è–º–∏, \
        –≥–¥–µ –≤–∞—à–∞ —Ü–µ–ª—å –±—É–¥–µ—Ç –∑–∞–±—Ä–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏ –∫–∞–º–µ–Ω—å', inline=True)
    embed.add_field(name='`!ln`', value='–ü–æ–∏–≥—Ä–∞–µ—Ç –≤ –æ—Ç–≥–∞–¥—ã–≤–∞–Ω–∏–µ —è–∑—ã–∫–∞ –ø–æ \n —Ñ—Ä–∞–∑–µ', inline=False)

    embed.add_field(name='\u200b', value='**üîç–î—Ä—É–≥–æ–µ**', inline=False)
    embed.add_field(name='`!info (@<—É–ø–æ–º—è–Ω–∏—Ç–µ —á–µ–ª–æ–≤–µ–∫–∞>)`', value='–ü–æ–∫–∞–∂–µ—Ç \
    –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É–ø–æ–º—è–Ω—É—Ç–æ–º —á–µ–ª–æ–≤–µ–∫–µ.', inline=True)
    embed.add_field(name='`!wn (–≥–æ—Ä–æ–¥)`', value='–ü–æ–∫–∞–∂–µ—Ç –ø–æ–≥–æ–¥—É –≤ —ç—Ç–æ–º –≥–æ—Ä–æ–¥–µ —Å–µ–≥–æ–¥–Ω—è, \
    —Ç–∞–∫–∂–µ –≤–∞–º –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –∫–Ω–æ–ø–æ—á–∫–∞ `(–ü–æ–≥–æ–¥–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ ‚õÖ)`, –∫–ª–∏–∫–Ω—É–≤ –ø–æ –∫–æ—Ç–æ—Ä–æ–π, \
    –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –≤ —Ç–æ–º –∂–µ –≥–æ—Ä–æ–¥–µ.', inline=True)
    embed.add_field(name='\u200b', value='\u200b', inline=False)
    embed.add_field(name='`!news`', value='–ü–æ–∫–∞–∂–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∫ —ç—Ç–æ–º—É —á–∞—Å—É, —Ç–∞–∫–∂–µ –≤–∞–º –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –∫–Ω–æ–ø–∫–∞ \n \
    `(‚ûï –ë–æ–ª—å—à–µ –Ω–æ–≤–æ—Å—Ç–µ–π)`, –ø—Ä–∏ –Ω–∞–∂–∏–º–∞–Ω–∏–∏ –Ω–∞ –Ω–µ—ë –±–æ—Ç –ø—Ä–∏—à–ª—ë—Ç –±–æ–ª—å—à–µ –Ω–æ–≤–æ—Å—Ç–µ–π.', inline=True)
    embed.add_field(name='\u200b', value='\u200b', inline=False)

    embed.add_field(name='**üëëSalmon proüëë**', value='–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –±–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–π, –≤—ã —Å–º–æ–∂–µ—Ç–µ **—Å–∫–∞—á–∏–≤–∞—Ç—å –º—É–∑—ã–∫—É \
    –±—É–∫–≤–∞–ª—å–Ω–æ –≤ –¥–≤–∞ –∫–ª–∏–∫–∞**', inline=False)
    embed.add_field(name='`!pro`', value='–ü–æ–∫–∞–∂–µ—Ç \
        –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–µ', inline=True)

    embed.add_field(name='\u200b',
                    value='–ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏—â–∏—Ç–µ –∑–¥–µ—Å—å - https://clck.ru/eAsPG',
                    inline=False)
    # embed.add_field(name="\u200B", value='<https://github.com/savateevdmit/Salmon.git>', inline=False)
    await ctx.send(embed=embed)
    print(ctx.guild.id)


@bot.command()
async def leave(ctx):
    await ctx.voice_client.disconnect()


@bot.command()
async def film(ctx, *kino):
    kino = ' '.join([i for i in kino])
    try:
        html = requests.get(
            f'https://ru.wikipedia.org/w/index.php?search={kino}+—Ñ–∏–ª—å–º&title=–°–ª—É–∂–µ–±–Ω–∞—è%3A–ü–æ–∏—Å–∫&go=–ü–µ—Ä–µ–π—Ç–∏&ns0=1').text
        soup = BeautifulSoup(html, 'html.parser')
        find_text = str(soup.find('div', {'class': 'mw-search-result-heading'}))
        a = find_text.split(' ')[3].split('=')[1][1:-1]
        html = requests.get(f'https://ru.wikipedia.org/{a}').text
        soup = BeautifulSoup(html, 'html.parser')
        find_text = str(soup.findAll('span', {'class': 'no-wikidata'}))
        b = find_text.split(' ')
        for i in b:
            if 'src' in i:
                b = i.split('=')[1][1:-1]
                break
        # print(b)
        picture = f'https:{b}'
        find_text = str(soup.find('h1', {'class': 'firstHeading mw-first-heading'}))
        g = '+'.join(find_text.split('=')[-1].split('>')[-2][:-4].split(' '))
        film_name = find_text.split('=')[-1].split('>')[-2][:-4]
        html = requests.get(f'https://www.kinopoisk.ru/index.php?kp_query={g}').text
        soup = BeautifulSoup(html, 'html.parser')
        find_text = str(soup.findAll('p', {'class': 'name'}))
        c = find_text.split(' ')
        try:
            d = find_text.split('/')[7][2:-1]
        except:
            ss = f'https://www.kinopoisk.ru/index.php?kp_query={g}'
        pp = 10
        k = 0
        n = 0
        try:
            for i in d.lower():
                if i in film_name.lower():
                    n += 1
            k = len(film_name) / n
            n = 0
            while k < 0.8:
                d = find_text.split('/')[7 + pp][2:-1]
                for i in d.lower():
                    if i in film_name.lower():
                        n += 1
                k = n / len(film_name)
                n = 0
                pp += 10
            o = pp / 10 * 2 - 2
            for i in c:
                if i[-2] in numbers and o == 0:
                    c = i.split('=')[1][1:-1]
                    break
                if i[-2] in numbers:
                    o -= 1
            ss = f'https://www.kinopoisk.ru/film/{c}/'
        except Exception as e:
            print(e)

        html = requests.get(f'https://ru.wikipedia.org/{a}').text
        soup = BeautifulSoup(html, 'html.parser')
        find_text = str(soup.find('span', {'data-wikidata-property-id': 'P272'}))
        e = find_text.split(' ')
        h = []
        if e[0] == "None":
            find_text = str(soup.find('div', {'data-wikidata-property-id': 'P272'}))
            e = find_text.split(' ')
        for i in e:
            if 'href' in i:
                h.append(i.split('/')[2][:-1])
        find_text = str(soup.find('span', {'data-wikidata-property-id': 'P2047'}))
        time = find_text.split('>')[1].split('<')[0]
        find_text = str(soup.find('span', {'data-wikidata-property-id': 'P2130'}))
        budget = find_text
        try:
            budget = budget[:budget.index('<a')] + budget[budget.index('a>') + 2:]

        except:
            pass
        budget = budget.split('">')[1].split('<sup')[0]
        find_text = str(soup.find('span', {'data-wikidata-property-id': 'P2142'}))
        sbori = find_text.split('">')[1].split('<sup')[0]
        cc1 = h[0]
        cc2 = 0
        try:
            cc2 = h[1]
        except:
            pass
        html = requests.get(f'https://ru.wikipedia.org/wiki/{cc1}').text
        soup = BeautifulSoup(html, 'html.parser')
        find_text = str(soup.findAll('span', {'class': 'no-wikidata'}))
        k = find_text.split(' ')
        for i in k:
            if 'src' in i:
                k = i.split('=')[1][1:-1]
                break
        # print(b)
        picture1 = f'https:{k}'
        html = requests.get(f'https://ru.wikipedia.org/{a}').text
        soup = BeautifulSoup(html, 'html.parser')
        find_text = str(soup.find('span', {'data-wikidata-property-id': 'P345'}))
        s = find_text.split(' ')
        for i in s:
            if 'href' in i:
                s = i.split('=')[1][1:-1]
        html = requests.get(s).text
        soup = BeautifulSoup(html, 'html.parser')
        find_text = str(soup.find('span', {'class': 'sc-7ab21ed2-1 jGRxWM'}))
        rating = find_text.split(' ')[-1].split('>')[-2].split('<')[0]
        find_text = str(soup.find('div', {'class': 'ipc-html-content ipc-html-content--base'}))
        s = find_text.split('<div>')[1].split('<span')[0]
        while True:
            try:
                s = s[:s.index('(')] + s[s.index(')') + 1:]
            except:
                break
    except:
        await ctx.reply('–Ø –Ω–µ –ø–æ–Ω—è–ª –∑–∞–ø—Ä–æ—Å(\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å!')
    try:
        opisanie = GoogleTranslator(source='auto', target='ru').translate(s)
        opisanie = GoogleTranslator(source='auto', target='ru').translate(s)
        embed = discord.Embed(title=f'üçø{film_name}',
                              color=0x1ba300)
        if len(picture1) > 12:
            if cc2 != 0:
                embed.set_author(name=f'{cc1} and {cc2}',
                                 icon_url=picture1)
            else:
                embed.set_author(name=cc1,
                                 icon_url=picture1)
        if len(time) > 1:
            embed.add_field(name='–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:', value=time, inline=False)
        if len(rating) > 0:
            embed.add_field(name='IMDb —Ä–µ–π—Ç–∏–Ω–≥:', value=f'{rating}/10', inline=False)
        if len(opisanie) > 1:
            embed.add_field(name='–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:', value=opisanie, inline=False)
        if len(ss) > 1:
            embed.add_field(name='–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä:', value=f'{ss}', inline=False)
        if len(picture) > 1:
            embed.set_image(url=picture)
        embed.set_footer(text="–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ‚Äô –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö!")

        await ctx.send(embed=embed)
    except:
        await ctx.reply('–í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞!\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É!')


@bot.command()
async def logo(ctx):
    global PLAY
    if PLAY:
        PLAY = False
        con = None
        number = random.sample(range(1, 60), 1)
        # number = 56
        count = 0
        word = morph.parse('—Å–µ–∫—É–Ω–¥–∞')[0]

        try:
            con = psycopg2.connect(settings['DATABASE_URL'])
            cur = con.cursor()
            cur.execute(f'SELECT * from logo where id = {number[0]}')

            # display the PostgreSQL database server version
            result = cur.fetchone()
            print(result)

            # close the communication with the HerokuPostgres
            cur.close()
        except Exception as error:
            print('Cause: {}'.format(error))

        finally:
            if con is not None:
                con.close()
                print('Database connection closed.')

        embed = discord.Embed(title='‚ùó–ü—Ä–∞–≤–∏–ª–∞‚ùó', color=0xf5e000)

        embed.add_field(name='‚ùì–£–≥–∞–¥–∞–π–∫–∞ –ª–æ–≥–æ—Ç–∏–ø‚ùî',
                        value='üî∞ –£ –≤–∞—Å –µ—Å—Ç—å 10 –ø–æ–ø—ã—Ç–æ–∫, —á—Ç–æ–±—ã —É–≥–∞–¥–∞—Ç—å –ª–æ–≥–æ—Ç–∏–ø –ø–æ –∫–∞—Ä—Ç–∏–Ω–∫–µ. \
                        –ü–∏—Å–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∫ –Ω–∞ —Ä—É—Å—Å–∫–æ–º, —Ç–∞–∫ –∏ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º.',
                        inline=False)
        embed.add_field(name='\u200b',
                        value='**‚ôª–ò–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å, –≤–æ—Ç –ø–µ—Ä–≤—ã–π –ª–æ–≥–æ—Ç–∏–ø!‚ôª**',
                        inline=False)
        embed.set_image(
            url=f'{result[3]}')
        await ctx.send(embed=embed)
        time0 = time.time()

        while True:
            message = await bot.wait_for('message', check=logo)
            if message.content == '!stop game':
                await ctx.send(f'‚ùå{message.author.mention}, –∏–≥—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!‚ùå')
                return
            else:
                id = message.author.id
                if message.content.lower() == result[1].lower() or \
                        message.content.lower() == result[2].lower():
                    # message.content.lower() in result[1].lower() or\
                    # message.content.lower() in result[2].lower():
                    time1 = time.time()
                    embed = discord.Embed(title='‚ùì–£–≥–∞–¥–∞–π–∫–∞ –ª–æ–≥–æ—Ç–∏–ø‚ùî', color=0x4fde02)
                    embed.add_field(name='üéâ' + f'**–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!**',
                                    value=f'<@!{id}>' + f', –≤—ã —É–≥–∞–¥–∞–ª–∏ –∑–∞ **{int(time1 - time0)}\
                                            {word.make_agree_with_number(int(time1 - time0)).word}**',
                                    inline=False)
                    embed.set_image(
                        url=f'{result[4]}')
                    # embed.set_footer(text='–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ!')
                    await message.channel.send(embed=embed)
                    count = 0
                    PLAY = True
                    return
                elif count == 10:
                    embed = discord.Embed(title='‚ùì–£–≥–∞–¥–∞–π–∫–∞ –ª–æ–≥–æ—Ç–∏–ø‚ùî', color=0xf25a07)
                    embed.add_field(name=f'–ò–≥—Ä–∞ –±—ã–ª–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞, —Ç–∞–∫ –∫–∞–∫ –Ω–∏–∫—Ç–æ –Ω–µ —Å–º–æ–≥ –æ—Ç–≤–µ—Ç–∏—Ç—å(',
                                    value=f'–û—Ç–≤–µ—Ç: **{result[2]}**',
                                    inline=False)
                    embed.set_image(
                        url=f'{result[4]}')
                    # embed.set_footer(text='–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ!')
                    await message.channel.send(embed=embed)
                    count = 0
                    PLAY = True
                    return
                else:
                    count += 1

        embed = discord.Embed(title='–£–≥–∞–¥–∞–π–∫–∞ –ª–æ–≥–æ—Ç–∏–ø', color=0xf25a07)
        embed.add_field(name=f'–ò–≥—Ä–∞ –±—ã–ª–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞, —Ç–∞–∫ –∫–∞–∫ –Ω–∏–∫—Ç–æ –Ω–µ —Å–º–æ–≥ –æ—Ç–≤–µ—Ç–∏—Ç—å(',
                        value=f'–û—Ç–≤–µ—Ç: **{result[2]}**',
                        inline=False)
        embed.set_image(
            url=f'{result[4]}')
        # embed.set_footer(text='–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ!')
        await message.channel.send(embed=embed)
        count = 0
        PLAY = True
        return

    else:
        await ctx.send(f'{ctx.message.author.mention}, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ –Ω–∞—á–∞—Ç—É—é –∏–≥—Ä—É!')


@bot.command()
async def add(ctx, arg, server=False):
    flag = False
    author = ctx.message.author
    if author.discriminator in DEVELOPERS:
        con = None
        try:
            if not server:
                con = psycopg2.connect(settings['DATABASE_URL'])
                cur = con.cursor()
                cur2 = con.cursor()
                cur3 = con.cursor()
                seconds = time.time()
                cur.execute(f"""INSERT INTO donat VALUES ('{arg}', {seconds})""")
                cur3.execute('select * from donat_server')
                cur2.execute('select * from donat')

                # display the PostgreSQL database server version
                result = cur2.fetchall()[:-1]
                result2 = cur3.fetchall()[:-1]
                for i in result:
                    DONATE1.append(f'üîπ {i[0]}')
                    if arg in i[0]:
                        flag = True

                for i in result2:
                    DONATE_SERVER.append(f'üîπ {i[0]}')
                    if arg in i[0]:
                        flag = True
                if flag:
                    await ctx.send(f'‚ùå–û—à–∏–±–∫–∞! {arg}, —É–∂–µ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω‚ùå')
                    await ctx.send(f'üî∞–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—Ä–µ–º–∏—É–º–æ–º:')
                    await ctx.send('\n'.join(DONATE1))
                    await ctx.send(f'üî∞–°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ —Å –ø—Ä–µ–º–∏—É–º–æ–º:')
                    await ctx.send('\n'.join(DONATE_SERVER))
                # close the communication with the HerokuPostgres
                else:
                    con.commit()
                    await ctx.send(f'‚úÖ{arg}, –¥–æ–±–∞–≤–ª–µ–Ω‚úÖ')
                    await ctx.send(f'üî∞–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—Ä–µ–º–∏—É–º–æ–º:')
                    await ctx.send('\n'.join(DONATE1))
                    await ctx.send(f'üî∞–°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ —Å –ø—Ä–µ–º–∏—É–º–æ–º:')
                    await ctx.send('\n'.join(DONATE_SERVER))

                cur.close()
                cur2.close()
                # cur3.close()

            else:
                con = psycopg2.connect(settings['DATABASE_URL'])
                cur = con.cursor()
                cur2 = con.cursor()
                cur3 = con.cursor()
                seconds = time.time()
                cur3.execute(f"""INSERT INTO donat_server VALUES ('{arg}', {seconds})""")
                cur2.execute('select * from donat_server')
                cur.execute('select * from donat')

                # display the PostgreSQL database server version
                result2 = cur2.fetchall()[:-1]
                result = cur.fetchall()[:-1]
                for i in result:
                    DONATE1.append(f'üîπ {i[0]}')
                    if arg in i[0]:
                        flag = True

                for i in result2:
                    DONATE_SERVER.append(f'üîπ {i[0]}')
                    if arg in i[0]:
                        flag = True

                if flag:
                    await ctx.send(f'‚ùå–û—à–∏–±–∫–∞! {arg}, —É–∂–µ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω‚ùå')
                    await ctx.send(f'üî∞–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—Ä–µ–º–∏—É–º–æ–º:')
                    await ctx.send('\n'.join(DONATE1))
                    await ctx.send(f'üî∞–°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ —Å –ø—Ä–µ–º–∏—É–º–æ–º:')
                    await ctx.send('\n'.join(DONATE_SERVER))
                # close the communication with the HerokuPostgres
                else:
                    con.commit()
                    await ctx.send(f'‚úÖ{arg}, –¥–æ–±–∞–≤–ª–µ–Ω‚úÖ')
                    await ctx.send(f'üî∞–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—Ä–µ–º–∏—É–º–æ–º:')
                    await ctx.send('\n'.join(DONATE1))
                    await ctx.send(f'üî∞–°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ —Å –ø—Ä–µ–º–∏—É–º–æ–º:')
                    await ctx.send('\n'.join(DONATE_SERVER))

                cur.close()
                cur2.close()
                cur3.close()

        except Exception as error:
            print('Cause: {}'.format(error))

        finally:
            if con is not None:
                con.close()
                print('Database connection closed.')
                DONATE1.clear()
                DONATE_SERVER.clear()
    else:
        await ctx.send('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!')


weather = ''


@bot.command()
async def wn(ctx, *c):
    global weather
    weather = c
    region = tr(' '.join(c))
    html = requests.get(f'https://pogoda.mail.ru/prognoz/{region}/').text
    r = 0
    soup = BeautifulSoup(html, 'html.parser')
    find_text = str(soup.find('h1', {'class': 'information__header__left__place__city'}))
    city = find_text.split('>')[1].split('<')[0]
    find_text = str(soup.find('div', {'class': 'information__header__left__date'}))
    date = find_text.split('>')[1].split('<')[0][7:-6]
    find_text = str(soup.find('div', {'class': 'information__content__temperature'}))
    temp = find_text.split(' ')[-1].split('span>')[1].split("<")[0][:-8]
    sost = find_text.split('="')[-1].split('">')[0]
    find_text = str(soup.find('div', {'class': 'information__content__additional__item'}))
    ohyh = find_text.split('e="')[1].split('">')[0].split(' ')[-1]
    find_text = str(soup.findAll('div', {'class': 'information__content__additional__item'}))
    dav = find_text.split('e="')[2 + r].split('">')[0].split(': ')[1]
    if '+' in dav or '-' in dav:
        r = 1
    dav = find_text.split('e="')[2 + r].split('">')[0].split(': ')[1]
    vlag = find_text.split('e="')[3 + r].split('">')[0].split(': ')[1]
    veter = find_text.split('e="')[4 + r].split('">')[0].split(': ')[1]
    ulfil = find_text.split('e="')[5 + r].split('">')[0].split(': ')[1]
    find_text = str(soup.findAll('div', {'class': 'information__content__additional__item__sun'}))
    sunup = ''
    sundown = ''
    try:
        sunup = find_text.split('e="')[1].split('">')[0].split(': ')[1]
        sundown = find_text.split('e="')[2].split('">')[0].split(': ')[1]
    except:
        pass
    # print(temp, ohyh, sost, dav, vlag, veter, ulfil, )
    embed = discord.Embed(title=f'‚õÖ {city}', description=f'{date}',
                          color=0x0084ff)
    embed.add_field(name='üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:', value=temp, inline=True)
    embed.add_field(name='ü™Å –ù–æ –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫:', value=ohyh, inline=True)
    embed.add_field(name='üå¶Ô∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ:', value=sost, inline=False)
    embed.add_field(name='ü©∫ –î–∞–≤–ª–µ–Ω–∏–µ:', value=dav, inline=True)
    embed.add_field(name='üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å:', value=vlag, inline=False)
    embed.add_field(name='üçÉ –í–µ—Ç–µ—Ä:', value=veter, inline=True)
    embed.add_field(name='‚òÄÔ∏è –ò–Ω–¥–µ–∫—Å —É–ª—å—Ç—Ä–∞—Ñ–∏–æ–ª–µ—Ç–∞:', value=ulfil, inline=False)
    if sunup != '':
        embed.add_field(name='üåÖ –í–æ—Å—Ö–æ–¥:', value=sunup, inline=True)
        embed.add_field(name='üåá –ó–∞–∫–∞—Ç:', value=sundown, inline=True)
    embed.set_footer(text="–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ‚Äô –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö!")

    await ctx.send(embed=embed,
                   components=[[Button(label="–ü–æ–≥–æ–¥–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ ‚õÖ", custom_id="wt", style=ButtonStyle.green)]])

    interaction = await bot.wait_for("button_click")
    if interaction.component.custom_id == 'wt':
        region = tr(' '.join(weather))
        html = requests.get(f'https://pogoda.mail.ru/prognoz/{region}/14dney/#day2').text
        soup = BeautifulSoup(html, 'html.parser')
        find_text = str(soup.findAll('div', {'class': 'day__temperature'}))
        temp = find_text.split('e">')[7].split('</')[0]
        find_text = str(soup.findAll('div', {'class': 'day__description'}))
        ohyh = ''.join(find_text.split('e="')[14].split('">')[0].split(' ')[2:])
        sost = find_text.split('e="')[15].split('">')[0]
        find_text = str(soup.findAll('div', {'class': 'day__additional'}))
        dav = ' '.join(find_text.split('e="')[31].split('">')[0].split(' ')[1:])
        vlag = ' '.join(find_text.split('e="')[32].split('">')[0].split(' ')[1:])
        veter = ' '.join(find_text.split('e="')[33].split('">')[0].split(' ')[1:])
        ulfil = ' '.join(find_text.split('e="')[34].split('">')[0].split(' ')[2:])
        find_text = str(soup.findAll('div', {'class': 'history-meteo__info'}))
        sunup = find_text.split('\n\t\t\t\t\t\t\t\t\t\t\t\t')[5].split('\n\t')[0]
        sundown = find_text.split('\n\t\t\t\t\t\t\t\t\t\t\t\t')[6].split('\n\t')[0]
        find_text = str(soup.findAll('div', {'class': 'heading heading_minor heading_line'}))
        date = find_text.split('e">')[2].split('\t')[-1].split(' <s')[0][1:]
        html = requests.get(f'https://pogoda.mail.ru/prognoz/{region}/').text
        soup = BeautifulSoup(html, 'html.parser')
        find_text = str(soup.find('h1', {'class': 'information__header__left__place__city'}))
        city = find_text.split('>')[1].split('<')[0]
        embed = discord.Embed(title=f'‚õÖ {city}', description=date,
                              color=0x0084ff)
        embed.add_field(name='üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:', value=temp, inline=True)
        embed.add_field(name='ü™Å –ù–æ –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫:', value=ohyh, inline=True)
        embed.add_field(name='üå¶Ô∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ:', value=sost, inline=False)
        embed.add_field(name='ü©∫ –î–∞–≤–ª–µ–Ω–∏–µ:', value=dav, inline=True)
        embed.add_field(name='üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å:', value=vlag, inline=False)
        embed.add_field(name='üçÉ –í–µ—Ç–µ—Ä:', value=veter, inline=True)
        embed.add_field(name='‚òÄÔ∏è –ò–Ω–¥–µ–∫—Å —É–ª—å—Ç—Ä–∞—Ñ–∏–æ–ª–µ—Ç–∞:', value=ulfil, inline=False)
        if sunup != '':
            embed.add_field(name='üåÖ –í–æ—Å—Ö–æ–¥:', value=sunup, inline=True)
            embed.add_field(name='üåá –ó–∞–∫–∞—Ç:', value=sundown, inline=True)
        embed.set_footer(text="–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ‚Äô –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö!")

        await interaction.send(embed=embed, ephemeral=False)


@bot.command()
async def news(ctx, *c):
    global news2
    html = requests.get(f'https://news.mail.ru/?').text
    soup = BeautifulSoup(html, 'html.parser')
    find_text = str(soup.findAll('a', {'class': 'list__text'}))
    news = {}
    for i in find_text.split('"'):
        if 'http' in i:
            news[find_text.split('"')[find_text.split('"').index(i) + 1][1:-15]] = i
    pnews = {}
    find_text = str(soup.findAll('a', {'class': 'newsitem__title link-holder'}))
    pnews[find_text.split('href="')[1].split('"><')[0]] = find_text.split('ner">')[1].split('</span')[0]
    find_text = str(soup.findAll('a', {'class': 'link link_flex'}))
    for i in find_text.split('"'):
        if 'http' in i:
            pnews[find_text.split('"')[find_text.split('"').index(i) + 3][1:-22]] = i

    for i in pnews:
        if 'http' in i:
            a = i

    del pnews[a]
    b = []
    for i in news:
        b.append(f'{i} ([–ø–æ–¥—Ä–æ–±–Ω–µ–µ]({news[i]}))\n\n')
    b = ''.join(b)
    embed = discord.Embed(title='üîç –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏!', description=b,
                          color=0xf5cc00)
    await ctx.send(embed=embed,
                   components=[[Button(label="‚ûï –ë–æ–ª—å—à–µ –Ω–æ–≤–æ—Å—Ç–µ–π", custom_id="news", style=ButtonStyle.green)]])

    b = []
    for i in pnews:
        b.append(f'{i} ([–ø–æ–¥—Ä–æ–±–Ω–µ–µ]({pnews[i]}))\n\n')
    b = ''.join(b)
    embed = discord.Embed(title='üîç –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏!', description=b,
                          color=0xf5cc00)
    news2 = embed

    interaction = await bot.wait_for("button_click")

    if interaction.component.custom_id == 'news':
        await interaction.send(embed=news2, ephemeral=False)


@bot.command()
async def nim(ctx):
    global xod, a, b, c, start, m, n, x
    options = [
        SelectOption(label='1', value='1'),
        SelectOption(label='2', value='2'),
        SelectOption(label='3', value='3')
    ]
    await ctx.send(
        f'‚ùó–ü—Ä–∞–≤–∏–ª–∞‚ùó\nüî∞ –ò–º–µ–µ—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫—É—á –∫–∞–º–Ω–µ–π. –ö–∞–∂–¥—ã–π –∏–≥—Ä–æ–∫ –≤ —Å–≤–æ–π —Ö–æ–¥ –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å –∏–∑ –ª—é–±–æ–π –∫—É—á–∏ –ª—é–±–æ–µ (–Ω–µ–Ω—É–ª–µ–≤–æ–µ) –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–º–Ω–µ–π(–∫—Ä–æ–º–µ –∏–≥—Ä—ã —Å 1 –∫—É—á–∏, —Ç–∞–º –º–æ–∂–Ω–æ –æ—Ç 1 –¥–æ 3 –∫–∞–º–Ω–µ–π). –í—ã–∏–≥—Ä—ã–≤–∞–µ—Ç —Ç–æ—Ç, –∫—Ç–æ –∑–∞–±—Ä–∞–ª –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–∞–º–µ–Ω—å –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∫—É—á–∏.\n'
        '–í –∏–≥—Ä—É —Å–æ —Å–∫–æ–ª—å–∫–∏ –∫—É—á–∞–º–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å?',
        components=[
            Select(
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª-–≤–æ –∫—É—á",
                options=options,
                custom_id='a',
            )
        ],
    )

    interaction = await bot.wait_for(
        "select_option", check=lambda inter: inter.custom_id == "a")
    values = int(interaction.values[0])
    zz = []
    options = [
        SelectOption(label='1', value='1'),
        SelectOption(label='2', value='2'),
        SelectOption(label='3', value='3'),
        SelectOption(label='4', value='4'),
        SelectOption(label='5', value='5'),
        SelectOption(label='6', value='6'),
        SelectOption(label='7', value='7'),
        SelectOption(label='8', value='8'),
        SelectOption(label='9', value='9'),
        SelectOption(label='10', value='10'),
        SelectOption(label='11', value='11'),
        SelectOption(label='12', value='12'),
        SelectOption(label='13', value='13'),
        SelectOption(label='14', value='14'),
        SelectOption(label='15', value='15'),
        SelectOption(label='16', value='16'),
        SelectOption(label='17', value='17'),
        SelectOption(label='18', value='18'),
        SelectOption(label='19', value='19'),
        SelectOption(label='20', value='20'),
        SelectOption(label='21', value='21'),
        SelectOption(label='22', value='22'),
        SelectOption(label='23', value='23'),
        SelectOption(label='24', value='24'),
        SelectOption(label='25', value='25')

    ]
    for i in range(1, values + 1):
        await interaction.send(
            f'–°–∫–æ–ª—å–∫–æ –∫–∞–º–Ω–µ–π –±—É–¥–µ—Ç –≤ {i} –∫—É—á–µ?',
            components=[
                Select(
                    placeholder=f"–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª-–≤–æ –∫–∞–º–Ω–µ–π –≤ {i} –∫—É—á–µ",
                    options=options,
                    custom_id='b',
                )
            ], ephemeral=False,
        )
        interaction = await bot.wait_for(
            "select_option", check=lambda inter: inter.custom_id == "b")
        zz.append(interaction.values[0])
        interaction.send(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ {interaction.values[0]} –∫–∞–º–Ω–µ–π', ephemeral=False)
    word2 = morph.parse('–∫–∞–º–µ–Ω—å')[0]
    try:
        c = int(zz[2])
    except:
        pass
    try:
        b = int(zz[1])
    except:
        pass
    try:
        a = int(zz[0])
    except:
        pass
    if start:
        embed = discord.Embed(title='‚ùó–£—Å–ª–æ–≤–∏—è‚ùó',
                              color=0xd1ff52)

        embed.add_field(name='1 –∫—É—á–∞:', value=f'{a} {word2.make_agree_with_number(a).word}', inline=True)
        if b != 0:
            embed.add_field(name='2 –∫—É—á–∞:', value=f'{b} {word2.make_agree_with_number(b).word}', inline=True)
        if c != 0:
            embed.add_field(name='3 –∫—É—á–∞:', value=f'{c} {word2.make_agree_with_number(c).word}', inline=True)
        await interaction.send(embed=embed, ephemeral=False)
        start = False
    if a != 0 and b != 0 and c != 0:
        while a != 0 or b != 0 or c != 0:
            x = 0  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–º–Ω–µ–π, –∑–∞–±–∏—Ä–∞–µ–º—ã—Ö –∏–∑ –∫—É—á–∏
            n = 0
            if a == b == 0:
                n = 3
                x = c
            elif a == c == 0:
                n = 2
                x = b
            elif b == c == 0:
                n = 1
                x = a
            # –ø—Ä–æ–≤–µ—Ä—è—é –µ—Å–ª–∏ –≤ –∫–∞–∫–æ–π-—Ç–æ –∫—É—á–µ 0 –∫–∞–º–Ω–µ–π, —Ç–æ —Å—Ç–∞—Ä–∞—é—Å—å –≤—ã—Ä–æ–≤–Ω—è—Ç—å –∫—É—á–∏
            # –µ—Å–ª–∏ –¥–≤–µ –¥—Ä—É–≥–∏–µ –∫—É—á–∏ —É–∂–µ —Ä–∞–≤–Ω—ã, —Ç–æ —É–º–µ–Ω—å—à–∞—é –æ–¥–Ω—É –∏–∑ –∫—É—á –Ω–∞ 1 –∫–∞–º–µ–Ω—å
            elif a == 0 and b != 0 and c != 0:
                if b == c:
                    n = 2
                    x = 1
                elif b > c:
                    n = 2
                    x = b - c
                else:
                    n = 3
                    x = c - b
            elif b == 0 and a != 0 and c != 0:
                if a == c:
                    n = 1
                    x = 1
                elif a > c:
                    n = 1
                    x = a - c
                else:
                    n = 3
                    x = c - a
            elif c == 0 and a != 0 and b != 0:
                if a == b:
                    n = 1
                    x = 1
                elif a > b:
                    n = 1
                    x = a - b
                else:
                    n = 2
                    x = b - a
            # –ø—Ä–æ–≤–µ—Ä—è—é –µ—Å–ª–∏ –≤ –∫–∞–∫–∏—Ö-—Ç–æ –¥–≤—É—Ö –∫—É—á–∞—Ö –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–º–Ω–µ–π, —Ç–æ
            # –æ–±–Ω—É–ª—è—é —Ç—Ä–µ—Ç—å—é –∫—É—á—É
            elif b == c and a != 0:
                n = 1
                x = a
            elif a == c and b != 0:
                n = 2
                x = b
            elif a == b and c != 0:
                n = 3
                x = c
            # –ø—Ä–æ–≤–µ—Ä—è—é –ø—Ä–æ–∏–≥—Ä—ã—à–Ω–æ—Å—Ç—å —Å–∏—Ç—É–∞—Ü–∏–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
            # –µ—Å–ª–∏ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è –ø—Ä–æ–∏–≥—Ä—ã—à–Ω–∞—è –≤—ã—á–∏—Ç–∞—é 1 –∫–∞–º–µ–Ω—å –∏–∑ –Ω–∞–∏–±–æ–ª—å—à–µ–π –∫—É—á–∏
            else:
                aa = a
                bb = b
                cc = c
                s = 0
                x = 0
                r = 0
                while aa != 0 or bb != 0 or cc != 0:
                    s = aa % 2 + bb % 2 + cc % 2
                    if s % 2 != 0:
                        x += 2 ** r
                        razr = r
                    aa = aa // 2
                    bb = bb // 2
                    cc = cc // 2
                    r += 1
                if x == 0:
                    x = 1
                    if a > b and a > c:
                        n = 1
                    elif b > a and b > c:
                        n = 2
                    else:
                        n = 3
                else:
                    aaa = a
                    while aaa > 0:
                        aa = aaa
                        bb = b
                        cc = c
                        nim = 0
                        r = 0
                        while aa != 0 or bb != 0 or cc != 0:
                            s = aa % 2 + bb % 2 + cc % 2
                            if s % 2 != 0:
                                nim += 2 ** r
                            aa = aa // 2
                            bb = bb // 2
                            cc = cc // 2
                            r += 1
                        if nim == 0:
                            n = 1
                            x = a - aaa
                            aaa = 0
                        aaa -= 1
                    if n == 0:
                        bbb = b
                        while bbb > 0:
                            aa = a
                            bb = bbb
                            cc = c
                            nim = 0
                            r = 0
                            while aa != 0 or bb != 0 or cc != 0:
                                s = aa % 2 + bb % 2 + cc % 2
                                if s % 2 != 0:
                                    nim += 2 ** r
                                aa = aa // 2
                                bb = bb // 2
                                cc = cc // 2
                                r += 1
                            if nim == 0:
                                n = 2
                                x = b - bbb
                                bbb = 0
                            bbb -= 1
                    if n == 0:
                        ccc = c
                        while ccc > 0:
                            aa = a
                            bb = b
                            cc = ccc
                            nim = 0
                            r = 0
                            while aa != 0 or bb != 0 or cc != 0:
                                s = aa % 2 + bb % 2 + cc % 2
                                if s % 2 != 0:
                                    nim += 2 ** r
                                aa = aa // 2
                                bb = bb // 2
                                cc = cc // 2
                                r += 1
                            if nim == 0:
                                n = 3
                                x = c - ccc
                                ccc = 0
                            ccc -= 1
            if n == 1:
                a -= x
            elif n == 2:
                b -= x
            else:
                c -= x
            embed = discord.Embed(title='ü™®–ù–∏–ºü™®', description='–ú–æ–π —Ö–æ–¥:',
                                  color=0xd1ff52)
            embed.add_field(name='\u200b', value=f'**üî∏–Ø –≤–∑—è–ª {x} {word2.make_agree_with_number(x).word}**',
                            inline=True)
            embed.add_field(name=f'üî∏–ò–∑ {n} –∫—É—á–∏', value=f'------------------------', inline=False)
            # embed.add_field(name='------------------------', value='\u200b', inline=False)
            embed.add_field(name='1 –∫—É—á–∞:', value=f'{a} {word2.make_agree_with_number(a).word}', inline=True)
            embed.add_field(name='2 –∫—É—á–∞:', value=f'{b} {word2.make_agree_with_number(b).word}', inline=True)
            embed.add_field(name='3 –∫—É—á–∞:', value=f'{c} {word2.make_agree_with_number(c).word}', inline=True)
            if a == b == c == 0:
                embed.add_field(name='üèÜ–Ø –≤—ã–∏–≥—Ä–∞–ª!', value=f'–ê —Ç—ã –Ω–µ—Ç :)', inline=False)
                await ctx.send(embed=embed)
                break
            await ctx.send(embed=embed)
            embed = discord.Embed(title='ü™®–ù–∏–ºü™®', description='‚ôªÔ∏è–¢–≤–æ–π —Ö–æ–¥',
                                  color=0xd1ff52)
            embed.add_field(name='\u200b', value=f'**–ò–∑ –∫–∞–∫–æ–π –∫—É—á–∏ —Ç—ã –≤–æ–∑—å–º–µ—à—å –∫–∞–º–Ω–∏?**', inline=False)
            options = [
                SelectOption(label='1', value='1'),
                SelectOption(label='2', value='2'),
                SelectOption(label='3', value='3')
            ]
            if a == 0:
                del options[0]
            if b == 0:
                del options[1]
            if c == 0:
                del options[2]
            await ctx.send(
                embed=embed,
                components=[
                    Select(
                        placeholder=f"–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä –∫—É—á–∏!",
                        options=options,
                        custom_id='c',
                    )
                ],
            )
            interaction = await bot.wait_for(
                "select_option", check=lambda inter: inter.custom_id == "c")
            n = int(interaction.values[0])
            if n == 1:
                kk = a
            elif n == 2:
                kk = b
            else:
                kk = c
            options = []
            for i in range(1, kk + 1):
                options.append(SelectOption(label=i, value=i))
            await interaction.send(
                '–°–∫–æ–ª—å–∫–æ –∫–∞–º–Ω–µ–π —Ö–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å?',
                components=[
                    Select(
                        placeholder=f"–í—ã–±–µ—Ä–∏ —á–∏—Å–ª–æ –∫–∞–º–Ω–µ–π!",
                        options=options,
                        custom_id='d',
                    )
                ], ephemeral=False,
            )
            interaction = await bot.wait_for(
                "select_option", check=lambda inter: inter.custom_id == "d")
            x = int(interaction.values[0])
            if n == 1:
                a -= x
            elif n == 2:
                b -= x
            else:
                c -= x
            embed = discord.Embed(title='ü™®–ù–∏–ºü™®', description='–¢–≤–æ–π —Ö–æ–¥:',
                                  color=0xd1ff52)
            embed.add_field(name='\u200b', value=f'**üî∏–¢—ã –≤–∑—è–ª {x} {word2.make_agree_with_number(x).word}**',
                            inline=True)
            embed.add_field(name=f'üî∏–ò–∑ {n} –∫—É—á–∏', value=f'------------------------', inline=False)
            # embed.add_field(name='------------------------', value='\u200b', inline=False)
            embed.add_field(name='1 –∫—É—á–∞:', value=f'{a} {word2.make_agree_with_number(a).word}', inline=True)
            embed.add_field(name='2 –∫—É—á–∞:', value=f'{b} {word2.make_agree_with_number(b).word}', inline=True)
            embed.add_field(name='3 –∫—É—á–∞:', value=f'{c} {word2.make_agree_with_number(c).word}', inline=True)
            if a == b == c == 0:
                embed.add_field(name='üèÜ–¢—ã –≤—ã–∏–≥—Ä–∞–ª!', value=f'–ê —è –Ω–µ—Ç :(', inline=False)
            await interaction.send(embed=embed, ephemeral=False)
        a = b = c = 0

    if a != 0 and b != 0 and c == 0:
        while a > 0 or b > 0:
            if a > b:
                x = a - b
                a -= x
                embed = discord.Embed(title='ü™®–ù–∏–ºü™®', description='–ú–æ–π —Ö–æ–¥:',
                                      color=0xd1ff52)
                embed.add_field(name='\u200b', value=f'**üî∏–Ø –≤–∑—è–ª {x} {word2.make_agree_with_number(x).word}**',
                                inline=True)
                embed.add_field(name=f'üî∏–ò–∑ {1} –∫—É—á–∏', value=f'------------------------', inline=False)
                # embed.add_field(name='------------------------', value='\u200b', inline=False)
                embed.add_field(name='1 –∫—É—á–∞:', value=f'{a} {word2.make_agree_with_number(a).word}', inline=True)
                embed.add_field(name='2 –∫—É—á–∞:', value=f'{b} {word2.make_agree_with_number(b).word}', inline=True)
            elif b > a:
                x = b - a
                b -= x
                embed = discord.Embed(title='ü™®–ù–∏–ºü™®', description='–ú–æ–π —Ö–æ–¥:',
                                      color=0xd1ff52)
                embed.add_field(name='\u200b', value=f'**üî∏–Ø –≤–∑—è–ª {x} {word2.make_agree_with_number(x).word}**',
                                inline=True)
                embed.add_field(name=f'üî∏–ò–∑ {2} –∫—É—á–∏', value=f'------------------------', inline=False)
                # embed.add_field(name='------------------------', value='\u200b', inline=False)
                embed.add_field(name='1 –∫—É—á–∞:', value=f'{a} {word2.make_agree_with_number(a).word}', inline=True)
                embed.add_field(name='2 –∫—É—á–∞:', value=f'{b} {word2.make_agree_with_number(b).word}', inline=True)
            else:
                x = 1
                b -= x
                embed = discord.Embed(title='ü™®–ù–∏–ºü™®', description='–ú–æ–π —Ö–æ–¥:',
                                      color=0xd1ff52)
                embed.add_field(name='\u200b', value=f'**üî∏–Ø –≤–∑—è–ª {x} {word2.make_agree_with_number(x).word}**',
                                inline=True)
                embed.add_field(name=f'üî∏–ò–∑ {2} –∫—É—á–∏', value=f'------------------------', inline=False)
                # embed.add_field(name='------------------------', value='\u200b', inline=False)
                embed.add_field(name='1 –∫—É—á–∞:', value=f'{a} {word2.make_agree_with_number(a).word}', inline=True)
                embed.add_field(name='2 –∫—É—á–∞:', value=f'{b} {word2.make_agree_with_number(b).word}', inline=True)
            if a == b == 0:
                embed.add_field(name='üèÜ–Ø –≤—ã–∏–≥—Ä–∞–ª!', value=f'–ê —Ç—ã –Ω–µ—Ç :)', inline=False)
                await ctx.send(embed=embed)
                break

            else:
                n = 0
                x = 0
                options = [
                    SelectOption(label='1', value='1'),
                    SelectOption(label='2', value='2')
                ]
                if a == 0:
                    del options[0]
                if b == 0:
                    del options[1]
                await ctx.send(
                    embed=embed,
                    components=[
                        Select(
                            placeholder=f"–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä –∫—É—á–∏!",
                            options=options,
                            custom_id='e',
                        )
                    ],
                )
                interaction = await bot.wait_for(
                    "select_option", check=lambda inter: inter.custom_id == "e")
                n = int(interaction.values[0])
                options = []
                if n == 1:
                    kk = a
                elif n == 2:
                    kk = b
                for i in range(1, kk + 1):
                    options.append(SelectOption(label=i, value=i))
                await interaction.send(
                    '–°–∫–æ–ª—å–∫–æ –∫–∞–º–Ω–µ–π —Ö–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å?',
                    components=[
                        Select(
                            placeholder=f"–í—ã–±–µ—Ä–∏ —á–∏—Å–ª–æ –∫–∞–º–Ω–µ–π!",
                            options=options,
                            custom_id='f',
                        )
                    ], ephemeral=False,
                )
                interaction = await bot.wait_for(
                    "select_option", check=lambda inter: inter.custom_id == "f")
                x = int(interaction.values[0])
                if n == 1:
                    a -= x
                    embed = discord.Embed(title='ü™®–ù–∏–ºü™®', description='–¢–≤–æ–π —Ö–æ–¥:',
                                          color=0xd1ff52)
                    embed.add_field(name='\u200b', value=f'**üî∏–¢—ã –≤–∑—è–ª {x} {word2.make_agree_with_number(x).word}**',
                                    inline=True)
                    embed.add_field(name=f'üî∏–ò–∑ {n} –∫—É—á–∏', value=f'------------------------', inline=False)
                    # embed.add_field(name='------------------------', value='\u200b', inline=False)
                    embed.add_field(name='1 –∫—É—á–∞:', value=f'{a} {word2.make_agree_with_number(a).word}', inline=True)
                    embed.add_field(name='2 –∫—É—á–∞:', value=f'{b} {word2.make_agree_with_number(b).word}', inline=True)
                else:
                    b -= x
                    embed = discord.Embed(title='ü™®–ù–∏–ºü™®', description='–¢–≤–æ–π —Ö–æ–¥:',
                                          color=0xd1ff52)
                    embed.add_field(name='\u200b', value=f'**üî∏–¢—ã –≤–∑—è–ª {x} {word2.make_agree_with_number(x).word}**',
                                    inline=True)
                    embed.add_field(name=f'üî∏–ò–∑ {n} –∫—É—á–∏', value=f'------------------------', inline=False)
                    # embed.add_field(name='------------------------', value='\u200b', inline=False)
                    embed.add_field(name='1 –∫—É—á–∞:', value=f'{a} {word2.make_agree_with_number(a).word}', inline=True)
                    embed.add_field(name='2 –∫—É—á–∞:', value=f'{b} {word2.make_agree_with_number(b).word}', inline=True)
                if a == b == 0:
                    embed.add_field(name='üèÜ–Ø –≤—ã–∏–≥—Ä–∞–ª!', value=f'–ê —Ç—ã –Ω–µ—Ç :)', inline=False)
                    await interaction.send(embed=embed, ephemeral=False)
                    break
                await interaction.send(embed=embed, ephemeral=False)
        a = b = 0
    if a != 0 and b == 0 and c == 0:
        while a != 0:
            if a % 4 == 1:
                x = 1
            elif a % 4 == 2:
                x = 2
            elif a % 4 == 3:
                x = 3
            else:
                x = 2
            if a == 1:
                x = 1
            elif a == 2:
                x = 2
            elif a == 3:
                x = 3
            a = a - x
            if a == 0:
                embed = discord.Embed(title='ü™®–ù–∏–ºü™®', description='–ú–æ–π —Ö–æ–¥:',
                                      color=0xd1ff52)
                embed.add_field(name='\u200b', value=f'**üî∏–Ø –≤–∑—è–ª {x} {word2.make_agree_with_number(x).word}**',
                                inline=True)
                embed.add_field(name=f'üî∏–ò–∑ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –∫—É—á–∏', value=f'------------------------', inline=False)
                # embed.add_field(name='------------------------', value='\u200b', inline=False)
                embed.add_field(name='1 –∫—É—á–∞:', value=f'{a} {word2.make_agree_with_number(a).word}', inline=True)
                embed.add_field(name='üèÜ–Ø –≤—ã–∏–≥—Ä–∞–ª!', value=f'–ê —Ç—ã –Ω–µ—Ç :)', inline=False)
                await ctx.send(embed=embed)
                break
            else:
                embed = discord.Embed(title='ü™®–ù–∏–ºü™®', description='–ú–æ–π —Ö–æ–¥:',
                                      color=0xd1ff52)
                embed.add_field(name='\u200b', value=f'**üî∏–Ø –≤–∑—è–ª {x} {word2.make_agree_with_number(x).word}**',
                                inline=True)
                embed.add_field(name=f'üî∏–ò–∑ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –∫—É—á–∏', value=f'------------------------', inline=False)
                # embed.add_field(name='------------------------', value='\u200b', inline=False)
                embed.add_field(name='1 –∫—É—á–∞:', value=f'{a} {word2.make_agree_with_number(a).word}', inline=True)
                options = [
                    SelectOption(label='1', value='1'),
                    SelectOption(label='2', value='2'),
                    SelectOption(label='3', value='3')
                ]
                if a == 2:
                    options = options[:-1]
                if a == 1:
                    options = options[0]
                await ctx.send(
                    '–°–∫–æ–ª—å–∫–æ –∫–∞–º–Ω–µ–π —Ö–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å?',
                    components=[
                        Select(
                            placeholder=f"–í—ã–±–µ—Ä–∏ —á–∏—Å–ª–æ –∫–∞–º–Ω–µ–π!",
                            options=options,
                            custom_id='h',
                        )
                    ], ephemeral=False,
                )
                interaction = await bot.wait_for(
                    "select_option", check=lambda inter: inter.custom_id == "h")
                x = int(interaction.values[0])
                a -= x
                if a == 0:
                    embed = discord.Embed(title='ü™®–ù–∏–ºü™®', description='–¢–≤–æ–π —Ö–æ–¥:',
                                          color=0xd1ff52)
                    embed.add_field(name='\u200b', value=f'**üî∏–¢—ã –≤–∑—è–ª {x} {word2.make_agree_with_number(x).word}**',
                                    inline=True)
                    embed.add_field(name=f'üî∏–ò–∑ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –∫—É—á–∏', value=f'------------------------', inline=False)
                    # embed.add_field(name='------------------------', value='\u200b', inline=False)
                    embed.add_field(name='1 –∫—É—á–∞:', value=f'{a} {word2.make_agree_with_number(a).word}', inline=True)
                    embed.add_field(name='üèÜ–¢—ã –≤—ã–∏–≥—Ä–∞–ª!', value=f'–ê —è –Ω–µ—Ç :(', inline=False)
                    await interaction.send(embed=embed, ephemeral=False)
                    break
                else:
                    embed = discord.Embed(title='ü™®–ù–∏–ºü™®', description='–¢–≤–æ–π —Ö–æ–¥:',
                                          color=0xd1ff52)
                    embed.add_field(name='\u200b', value=f'**üî∏–¢—ã –≤–∑—è–ª {x} {word2.make_agree_with_number(x).word}**',
                                    inline=True)
                    embed.add_field(name=f'üî∏–ò–∑ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –∫—É—á–∏', value=f'------------------------', inline=False)
                    # embed.add_field(name='------------------------', value='\u200b', inline=False)
                    embed.add_field(name='1 –∫—É—á–∞:', value=f'{a} {word2.make_agree_with_number(a).word}', inline=True)
                    await interaction.send(embed=embed, ephemeral=False)
        a = 0


@bot.command()
async def pro(ctx):
    author = ctx.message.author
    await ctx.send(f'{author.mention}, –æ—Ç–ø—Ä–∞–≤–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤–∞–º –≤ –õ–°')

    embed = discord.Embed(title='üëë Salmon-pro', color=0xd1ff52)
    embed.add_field(name='üî∞ –û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏:', value='–° –ø–æ–º–æ—â—å—é —ç—Ç–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ \
                –≤—ã —Å–º–æ–∂–µ—Ç–µ –±–µ–∑ —Ç—Ä—É–¥–∞ \n __—Å–∫–∞—á–∏–≤–∞—Ç—å –∞–±—Å–æ–ª—é—Ç–Ω–æ –ª—é–±—É—é –º—É–∑—ã–∫—É__, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É `!dw (–ø–µ—Å–Ω—è)`, \n \
                –∏ –±–æ—Ç __–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—á–Ω—ë—Ç –ø–æ–∏—Å–∫ –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ__, –∞ –ø–æ—Ç–æ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç –µ—ë –≤–∞–º –≤ –ª–∏—á–Ω—ã–µ \
                —Å–æ–æ–±—â–µ–Ω–∏—è. –í—Å—è –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –∑–∞–π–º—ë—Ç __–Ω–µ –±–æ–ª–µ–µ 15 —Å–µ–∫—É–Ω–¥__, —á—Ç–æ –Ω–∞–º–Ω–æ–≥–æ –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º —Ä—É—á–Ω–æ–π –ø–æ–∏—Å–∫!',
                    inline=False)

    embed.add_field(name='\u200b', value='\u200b',
                    inline=False)

    embed.add_field(name='üßÆ –¢–∞—Ä–∏—Ñ—ã:', value='üî∏**1.** –ù–∞ –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ **–ù–ê –ú–ï–°–Ø–¶** - 40—Ä  \n \
                                            üî∏**2**. –ù–∞ —Å–µ—Ä–≤–µ—Ä —Å __–ª—é–±—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤__ **–ù–ê –ú–ï–°–Ø–¶** - 180—Ä',
                    inline=False)

    await author.send(
        embed=embed,
        components=[
            Select(
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ",
                options=[
                    SelectOption(label="1. –ù–∞ –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞", value="one"),
                    SelectOption(label="2. –ù–∞ –≤–µ—Å—å —Å–µ—Ä–≤–µ—Ä", value="all"),
                ],
                custom_id="tarif",
            )
        ],
    )

    interaction = await bot.wait_for(
        "select_option", check=lambda inter: inter.custom_id == "tarif"
    )
    if interaction.values[0] == 'one':
        embed = discord.Embed(title='üëë Salmon-pro', color=0xd1ff52)
        embed.add_field(name='üí∞–ü–æ–¥–ø–∏—Å–∫–∞ –¥–ª—è –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ - 40—Ä', value='\u200b',
                        inline=False)

        embed.add_field(name='üßæ–ò—Ç–æ–≥–æ: 40—Ä', value='–í—ã–±–µ—Ä–µ—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏ —Å–ª–µ–¥—É–π—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º',
                        inline=False)

        await interaction.send(ephemeral=False, embed=embed)

        msg = await author.send(components=[[Button(label="ü™ô–Æ–º–∞–Ω–∏", custom_id="yoomoney", style=ButtonStyle.green),
                                             Button(label="üí≥–ü–µ—Ä–µ–≤–æ–¥ –ø–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã", custom_id="card",
                                                    style=ButtonStyle.green)]])

        interaction = await bot.wait_for("button_click")
        if interaction.component.custom_id == 'yoomoney':
            embed = discord.Embed(title='üëë Salmon-pro', color=0xd1ff52)
            embed.set_thumbnail(url='http://qrcoder.ru/code/?https%3A%2F%2Fyoomoney.ru%2Fto%2F4100110960641547&4&0')
            embed.add_field(name='ü™ô–Æ–º–∞–Ω–∏', value='\u200b',
                            inline=False)

            embed.add_field(name='‚ùó–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ', value=f'–ü–æ—Å—Ç–∞–≤—å—Ç–µ –≥–∞–ª–æ—á–∫—É –≤ —Å—Ç—Ä–æ–∫–µ\
            `–î–æ–±–∞–≤–∏—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞` –∏ –≤–≤–µ–¥–∏—Ç–µ —Ç—É–¥–∞ —ç—Ç–æ - **`{author.discriminator}`**, –∞ \
                             –≤ —Å—Ç—Ä–æ–∫—É `–°–∫–æ–ª—å–∫–æ` - 40!',
                            inline=False)
            embed.set_footer(text='–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã, –Ω–∞–ø–∏—à–∏—Ç–µ !pro –∑–∞–Ω–æ–≤–æ')

            await msg.delete()
            await interaction.send(embed=embed, ephemeral=False)
            await author.send(components=[
                [Button(label="ü™ô–Æ–º–∞–Ω–∏", url='https://yoomoney.ru/to/4100110960641547', style=ButtonStyle.URL)]])


        else:
            embed2 = discord.Embed(title='üëë Salmon-pro', color=0xd1ff52)
            embed2.add_field(name='üí≥–ü–µ—Ä–µ–≤–æ–¥ –ø–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã', value='\u200b',
                             inline=False)
            embed2.set_thumbnail(
                url='http://qrcoder.ru/code/?https%3A%2F%2Fwww.tinkoff.ru%2Frm%2Fsavateev.dmitriy12%2FJgqwn3240&4&0')

            embed2.add_field(name='‚ùó–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ', value=f'–ù–∞–ø–∏—à–∏—Ç–µ –≤ —Å—Ç—Ä–æ–∫–µ `–°–æ–æ–±—â–µ–Ω–∏–µ` —ç—Ç–æ - **`{author.discriminator}`**, \
                             –≤ —Å—Ç—Ä–æ–∫–µ `–°—É–º–º–∞` - 40!',
                             inline=False)
            embed2.set_footer(text='–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã, –Ω–∞–ø–∏—à–∏—Ç–µ !pro –∑–∞–Ω–æ–≤–æ')

            await msg.delete()
            await interaction.send(embed=embed2, ephemeral=False)
            await author.send(components=[[Button(label="üí≥–ü–µ—Ä–µ–≤–æ–¥ –ø–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã",
                                                  url='https://www.tinkoff.ru/rm/savateev.dmitriy12/Jgqwn3240',
                                                  style=ButtonStyle.URL)]])

    else:
        embed = discord.Embed(title='üëë Salmon-pro', color=0xd1ff52)
        embed.add_field(name='üí∞–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä - 180—Ä', value='\u200b',
                        inline=False)

        embed.add_field(name='üßæ–ò—Ç–æ–≥–æ: 180—Ä', value='–í—ã–±–µ—Ä–µ—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏ —Å–ª–µ–¥—É–π—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º',
                        inline=False)

        await interaction.send(ephemeral=False, embed=embed)

        msg = await author.send(components=[[Button(label="ü™ô–Æ–º–∞–Ω–∏", custom_id="yoomoney", style=ButtonStyle.green),
                                             Button(label="üí≥–ü–µ—Ä–µ–≤–æ–¥ –ø–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã", custom_id="card",
                                                    style=ButtonStyle.green)]])

        interaction = await bot.wait_for("button_click")
        if interaction.component.custom_id == 'yoomoney':
            embed = discord.Embed(title='üëë Salmon-pro', color=0xd1ff52)
            embed.set_thumbnail(url='http://qrcoder.ru/code/?https%3A%2F%2Fyoomoney.ru%2Fto%2F4100110960641547&4&0')
            embed.add_field(name='ü™ô–Æ–º–∞–Ω–∏', value='\u200b',
                            inline=False)

            embed.add_field(name='‚ùó–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ', value=f'–ü–æ—Å—Ç–∞–≤—å—Ç–µ –≥–∞–ª–æ—á–∫—É –≤ —Å—Ç—Ä–æ–∫–µ\
                        `–î–æ–±–∞–≤–∏—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞` –∏ –≤–≤–µ–¥–∏—Ç–µ —Ç—É–¥–∞ —ç—Ç–æ - **`{ctx.guild.id}`**, –∞\
                                         –≤ —Å—Ç—Ä–æ–∫—É `–°–∫–æ–ª—å–∫–æ` - 180!',
                            inline=False)
            embed.set_footer(text='–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã, –Ω–∞–ø–∏—à–∏—Ç–µ !pro –∑–∞–Ω–æ–≤–æ')

            await msg.delete()
            await interaction.send(embed=embed, ephemeral=False)
            await author.send(components=[
                [Button(label="ü™ô–Æ–º–∞–Ω–∏", url='https://yoomoney.ru/to/4100110960641547', style=ButtonStyle.URL)]])

        if interaction.component.custom_id == 'card':
            try:
                embed2 = discord.Embed(title='üëë Salmon-pro', color=0xd1ff52)
                embed2.add_field(name='üí≥–ü–µ—Ä–µ–≤–æ–¥ –ø–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã', value='\u200b',
                                 inline=False)
                embed2.set_thumbnail(
                    url='http://qrcoder.ru/code/?https%3A%2F%2Fwww.tinkoff.ru%2Frm%2Fsavateev.dmitriy12%2FJgqwn3240&4&0')

                embed2.add_field(name='‚ùó–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ',
                                 value=f'–ù–∞–ø–∏—à–∏—Ç–µ –≤ —Å—Ç—Ä–æ–∫–µ `–°–æ–æ–±—â–µ–Ω–∏–µ` —ç—Ç–æ - **`{ctx.guild.id}`**, \
                                 –≤ —Å—Ç—Ä–æ–∫–µ `–°—É–º–º–∞` - 180!',
                                 inline=False)
                embed2.set_footer(text='–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã, –Ω–∞–ø–∏—à–∏—Ç–µ !pro –∑–∞–Ω–æ–≤–æ')

                await msg.delete()
                await interaction.send(embed=embed2, ephemeral=False)

                await author.send(components=[[Button(label="üí≥–ü–µ—Ä–µ–≤–æ–¥ –ø–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã",
                                                      url='https://www.tinkoff.ru/rm/savateev.dmitriy12/Jgqwn3240',
                                                      style=ButtonStyle.URL)]])

            except:
                await author.send(
                    '‚ùå–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É!‚ùå')

        # await interaction2.send(embed=embed2, ephemeral=False)


@bot.command()
async def ln(ctx):
    await ctx.send('–ü–æ–¥–±–∏—Ä–∞—é —è–∑—ã–∫...')
    phrases = [
        '–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç –õ–æ—Å–æ—Å—å',
        '–ú—ã –∏–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É "—É–≥–∞–¥–∞–π —è–∑—ã–∫–∏"',
        '–¢—ã –ø–æ—Å–æ–≤–µ—Ç—É–µ—à—å –º–µ–Ω—è —Å–≤–æ–∏–º –¥—Ä—É–∑—å—è–º?)',
        '–ú–æ–∂–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–∏–º —Ñ–∏–ª—å–º?',
        '–ù–µ —Å–º–µ–π –¥–∞–∂–µ –¥—É–º–∞—Ç—å –æ —Ç–æ–º, —á—Ç–æ–±—ã –º–µ–Ω—è –ø–æ–∂–∞—Ä–∏—Ç—å!',
        '–¢—ã —É–∂–µ —Å–ª—É—à–∞–ª –º–æ—é –º—É–∑—ã–∫—É?'
    ]
    lng = [
        '–ö–∏—Ç–∞–π—Å–∫–∏–π',
        '–•–∏–Ω–¥–∏',
        '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π',
        '–ò—Å–ø–∞–Ω—Å–∫–∏–π',
        '–ë–µ–Ω–≥–∞–ª—å—Å–∫–∏–π',
        '–ü–æ—Ä—Ç—É–≥–∞–ª—å—Å–∫–∏–π',
        '–Ø–ø–æ–Ω—Å–∫–∏–π',
        '–ö–æ—Ä–µ–π—Å–∫–∏–π',
        '–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π',
        '–Ø–≤–∞–Ω—Å–∫–∏–π',
        '–¢–µ–ª—É–≥—É',
        '–ú–∞—Ä–∞—Ç—Ö–∏',
        '–í—å–µ—Ç–Ω–∞–º—Å–∫–∏–π',
        '–¢–∞–º–∏–ª—å—Å–∫–∏–π',
        '–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π',
        '–¢—É—Ä–µ—Ü–∫–∏–π',
        '–£—Ä–¥—É',
        '–ü–∞–Ω–¥–∂–∞–±–∏',
        '–£–∫—Ä–∞–∏–Ω—Å–∫–∏–π',
        '–ì—É–¥–∂–∞—Ä–∞—Ç–∏',
        '–¢–∞–π—Å–∫–∏–π',
        '–ü–æ–ª—å—Å–∫–∏–π',
        '–ú–∞–ª–∞—è–ª–∞–º',
        '–ö–∞–Ω–Ω–∞–¥–∞',
        '–ë–∏—Ä–º–∞–Ω—Å–∫–∏–π',
        '–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω—Å–∫–∏–π',
        '–ü–µ—Ä—Å–∏–¥—Å–∫–∏–π',
        '–°—É–Ω–¥–∞–Ω—Å–∫–∏–π',
        '–ü—É—à—Ç—É',
        '–†—É–º—ã–Ω—Å–∫–∏–π',
        '–ë—Ö–æ–¥–∂–ø—É—Ä–∏',
        '–•–∞—É—Å–∞',
        '–ú–∞–ª–∞–π—Å–∫–∏–π',
        '–°–µ—Ä–±–æ—Ö–æ—Ä–≤–∞—Ç—Å–∫–∏–π',
        '–£–∑–±–µ–∫—Å–∫–∏–π',
        '–ô–æ—Ä—É–±–∞',
        '–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—Å–∫–∏–π',
        '–°–∏–Ω–¥—Ö–∏',
        '–ò–≥–±–æ',
        '–ê–º—Ö–∞—Ä—Å–∫–∏–π',
        '–ò–Ω–¥–æ–Ω–µ–∑–∏–π—Å–∫–∏–π',
        '–¢–∞–≥–∞–ª—å—Å–∫–∏–π',
        '–ù–µ–ø–∞–ª—å—Å–∫–∏–π',
        '–ê—Å—Å–∞–º—Å–∫–∏–π',
        '–í–µ–Ω–≥–µ—Ä—Å–∫–∏–π',
        '–ß–∏—Ç—Ç–∞–≥–æ–Ω–≥',
        '–ß–∂—É–∞–Ω—Å–∫–∏–π',
        '–ú–∞—Ä–≤–∞—Ä–∏',
        '–•–∞—Ä—å—è–Ω–≤–∏',
        '–ì—Ä–µ—á–µ—Å–∫–∏–π',
        '–ß–µ—à—Å–∫–∏–π',
        '–î–∞–∫—Ö–Ω–∏',
        '–ú–∞–ª–∞–≥–∞—Å–∏–π—Å–∫–∏–π',
        '–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π'
    ]
    b = choice(lng)
    print(b)

    ln = GoogleTranslator(source='auto', target='english').translate(b).lower()
    phrase = choice(phrases)
    try:
        rphrase = GoogleTranslator(source='auto', target=ln).translate(phrase)
    except:
        del lng[lng.index(b)]
        b = choice(lng)
        print(b)
        ln = GoogleTranslator(source='auto', target='english').translate(b).lower()
        phrase = choice(phrases)
        rphrase = GoogleTranslator(source='auto', target=ln).translate(phrase)
    lngs = []
    while len(lngs) < 8:
        a = choice(lng)
        if a not in lngs and GoogleTranslator(source='auto', target='english').translate(a).lower() != ln:
            lngs.append(a)
    lngs.insert(random.randrange(9), b)
    lngs.append('–Ø –Ω–µ –∑–Ω–∞—é(')
    embed = discord.Embed(title='üåç –£–≥–∞–¥–∞–π —è–∑—ã–∫', description='–í—ã–±–µ—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞',
                          color=0xff8534)
    embed.add_field(name='üìñ –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —Ñ—Ä–∞–∑–∞:', value=phrase, inline=False)
    embed.add_field(name='ü™ß –ü–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω–∞—è —Ñ—Ä–∞–∑–∞:', value=rphrase, inline=False)
    options = [SelectOption(label=lngs[i], value=lngs[i]) for i in range(9)]
    options.append(SelectOption(label=lngs[9], value=lngs[9]))
    await ctx.send(
        embed=embed,
        components=[
            Select(
                placeholder=f"–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫, –∫–æ—Ç–æ—Ä—ã–π —Å—á–∏—Ç–∞–µ—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º!",
                options=options,
                custom_id='j',
            )
        ],
    )
    intr = await bot.wait_for(
        "select_option", check=lambda inter: inter.custom_id == "j")
    x = intr.values[0]
    if x == b:

        await intr.send('üôÇ –í—ã –º–æ–ª–æ–¥–µ—Ü! –≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!', ephemeral=False)
    elif x == '–Ø –Ω–µ –∑–Ω–∞—é(':
        await intr.send(f'ü§∑‚Äç‚ôÇÔ∏è –≠—Ç–æ –±—ã–ª {b} —è–∑—ã–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!', ephemeral=False)
    else:
        await intr.send(f'üò¢ –ù–µ–≤–µ—Ä–Ω–æ! –≠—Ç–æ {b} —è–∑—ã–∫', ephemeral=False)


# –†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –±–æ—Ç —Å –º–∏–Ω–∏-–∏–≥—Ä–∞–º–∏, –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –º—É–∑—ã–∫–æ–π –æ—Ç –Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–∏ –∏ –≥–æ–ª–æ—Å–æ–≤—ã–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º
bot.run(settings['token'])
